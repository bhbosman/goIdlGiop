// Code generated by me. DO NOT EDIT.

package goIdlGiop

import __goIdlIop__ "github.com/bhbosman/goIdlIop"
import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"

// Struct declaration: "GIOP::RequestHeader_1_2", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type GiopRequestHeader12 struct {
	__goidl__.IdlObject
	RequestId uint32 `json:"RequestId"`
	ResponseFlags byte `json:"ResponseFlags"`
	Reserved [3]byte `json:"Reserved"`
	Target GiopTargetAddress `json:"Target"`
	Operation string `json:"Operation"`
	ServiceContext __goIdlIop__.IopServiceContextList `json:"ServiceContext"`
}

//noinspection GoSnakeCaseUsage
const GiopRequestHeader12Id_Const = "IDL:omg.org/GIOP/RequestHeader_1_2:1.0"

func (self *GiopRequestHeader12) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *GiopRequestHeader12) GoString() string {
	return self.String()
}

func (self *GiopRequestHeader12) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(UnsignedLongType)
	self.RequestId, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlOctetKind)
	self.ResponseFlags, err = __goidl__.IdlOctetHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlOctetKind)
	self.Reserved, err = GiopRequestReservedHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlUnion)
	err = self.Target.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(StringType)
	self.Operation, err = __goidl__.IdlStringHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlStruct)
	err = self.ServiceContext.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *GiopRequestHeader12) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *GiopRequestHeader12) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(UnsignedLongType)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.RequestId)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlOctetKind)
	err = __goidl__.IdlOctetHelper.Write(stream, self.ResponseFlags)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlOctetKind)
	err = GiopRequestReservedHelper.Write(stream, self.Reserved)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlUnion)
	err = self.Target.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(StringType)
	err = __goidl__.IdlStringHelper.Write(stream, self.Operation)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlStruct)
	err = self.ServiceContext.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type GiopRequestHeader12_Helper struct {
}


//noinspection GoUnusedGlobalVariable
var GiopRequestHeader12Helper = GiopRequestHeader12_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			GiopRequestHeader12Id_Const,
			__goidl__.StructType,
			"GIOP.idl",
			"xdl_GiopRequestHeader12.go",
			func() __goidl__.IIdlObject {
				return &GiopRequestHeader12{}
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return &GiopRequestHeader12{}
			},
			__reflect__.TypeOf((*GiopRequestHeader12)(nil))))
}
