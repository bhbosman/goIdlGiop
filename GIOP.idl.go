// Code generated by me. DO NOT EDIT.

package goIdlGiop

import __goIdlIop__ "github.com/bhbosman/goIdlIop"
import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"

// TypeDef declaration: "GIOP::Magicn", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "GIOP::Magicn" from: "[4]byte"
type GiopMagicn [4]byte

//noinspection GoSnakeCaseUsage
type GiopMagicn_Helper struct {
}

//noinspection GoSnakeCaseUsage
const GiopMagicnId_Const = "IDL:omg.org/GIOP/Magicn:1.0"

func (self GiopMagicn_Helper) Id() string {
	return GiopMagicnId_Const
}

func (self GiopMagicn_Helper) Read(stream __goidl__.IReadAny) ([4]byte, error) {
	var data GiopMagicn
	var err error
	for i0 := 0; i0 < 4; i0++ {
		data[i0], err = __goidl__.IdlOctetHelper.Read(stream)
		if err != nil {
			return data, err
		}
	}
	return data, nil
}

func (self GiopMagicn_Helper) Write(stream __goidl__.IWriteAny, v [4]byte) error {
	var data GiopMagicn
	var err error
	for i0 := 0; i0 < 4; i0++ {
		err = __goidl__.IdlOctetHelper.Write(stream, data[i0])
		if err != nil {
			return err
		}
	}
	return nil
}

// TypeDef declaration: "GIOP::RequestReserved", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "GIOP::RequestReserved" from: "[3]byte"
type GiopRequestReserved [3]byte

//noinspection GoSnakeCaseUsage
type GiopRequestReserved_Helper struct {
}

//noinspection GoSnakeCaseUsage
const GiopRequestReservedId_Const = "IDL:omg.org/GIOP/RequestReserved:1.0"

func (self GiopRequestReserved_Helper) Id() string {
	return GiopRequestReservedId_Const
}

func (self GiopRequestReserved_Helper) Read(stream __goidl__.IReadAny) ([3]byte, error) {
	var data GiopRequestReserved
	var err error
	for i0 := 0; i0 < 3; i0++ {
		data[i0], err = __goidl__.IdlOctetHelper.Read(stream)
		if err != nil {
			return data, err
		}
	}
	return data, nil
}

func (self GiopRequestReserved_Helper) Write(stream __goidl__.IWriteAny, v [3]byte) error {
	var data GiopRequestReserved
	var err error
	for i0 := 0; i0 < 3; i0++ {
		err = __goidl__.IdlOctetHelper.Write(stream, data[i0])
		if err != nil {
			return err
		}
	}
	return nil
}

// TypeDef declaration: "GIOP::AddressingDisposition", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "GIOP::AddressingDisposition" from: "int16"
type GiopAddressingDisposition int16

//noinspection GoSnakeCaseUsage
type GiopAddressingDisposition_Helper struct {
}

//noinspection GoSnakeCaseUsage
const GiopAddressingDispositionId_Const = "IDL:omg.org/GIOP/AddressingDisposition:1.0"

func (self GiopAddressingDisposition_Helper) Id() string {
	return GiopAddressingDispositionId_Const
}

func (self GiopAddressingDisposition_Helper) Read(stream __goidl__.IReadAny) (int16, error) {
	result, err := __goidl__.IdlInt16Helper.Read(stream)
	return result, err
}

func (self GiopAddressingDisposition_Helper) Write(stream __goidl__.IWriteAny, v int16) error {
	return __goidl__.IdlInt16Helper.Write(stream, v)
}

// Constant declaration: "GIOP::KeyAddr", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const GiopKeyAddr int16 = 0

// Constant declaration: "GIOP::ProfileAddr", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const GiopProfileAddr int16 = 1

// Constant declaration: "GIOP::ReferenceAddr", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const GiopReferenceAddr int16 = 2

// Union declaration: "GIOP::TargetAddress", generatedBy by: "WriteUnionDcl"
// Exception Decl: false
type GiopTargetAddress struct {
	__goidl__.IdlObject
	Switch int16 `json:"Switch"`
	ObjectKey __goIdlIop__.IopObjectKey `json:"ObjectKey"`
	Profile __goIdlIop__.IopTaggedProfile `json:"Profile"`
	Ior GiopIORAddressingInfo `json:"Ior"`
}

func (self *GiopTargetAddress) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *GiopTargetAddress) GoString() string {
	return self.String()
}

//noinspection GoSnakeCaseUsage
type GiopTargetAddress_Helper struct {
}

//noinspection GoSnakeCaseUsage
const GiopTargetAddressId_Const = "IDL:omg.org/GIOP/TargetAddress:1.0"

// WriteUnionDcl::WriteExtractValue
func (self *GiopTargetAddress) Read(stream __goidl__.IReadAny) error {
	var err error
	self.Switch, err = GiopAddressingDispositionHelper.Read(stream)
	if err != nil {
		return err
	}
	switch self.Switch {
	case 0:
	// WriteStructHelper::WriteStructMemberExtractValue(IdlStruct)
		err = self.ObjectKey.Read(stream)
		if err != nil {
			return err
		}
		break
	case 1:
	// WriteStructHelper::WriteStructMemberExtractValue(IdlStruct)
		err = self.Profile.Read(stream)
		if err != nil {
			return err
		}
		break
	case 2:
	// WriteStructHelper::WriteStructMemberExtractValue(IdlStruct)
		err = self.Ior.Read(stream)
		if err != nil {
			return err
		}
		break
	default:
		return __goidl__.InvalidSwitch
	}
	return nil
}

// WriteUnionDcl::WriteInsert
func (self *GiopTargetAddress) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = GiopAddressingDispositionHelper.Write(stream, self.Switch)
	if err != nil {
		return err
	}
	switch self.Switch {
	case 0:
	// WriteStructHelper::WriteStructMemberInsert(IdlStruct)
		err = self.ObjectKey.Write(stream)
		if err != nil {
			return err
		}
		break
	case 1:
	// WriteStructHelper::WriteStructMemberInsert(IdlStruct)
		err = self.Profile.Write(stream)
		if err != nil {
			return err
		}
		break
	case 2:
	// WriteStructHelper::WriteStructMemberInsert(IdlStruct)
		err = self.Ior.Write(stream)
		if err != nil {
			return err
		}
		break
	}
	return nil
}


//noinspection GoUnusedGlobalVariable
var GiopMagicnHelper = GiopMagicn_Helper{}

//noinspection GoUnusedGlobalVariable
var GiopRequestReservedHelper = GiopRequestReserved_Helper{}

//noinspection GoUnusedGlobalVariable
var GiopAddressingDispositionHelper = GiopAddressingDisposition_Helper{}

//noinspection GoUnusedGlobalVariable
var GiopTargetAddressHelper = GiopTargetAddress_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			GiopTargetAddressId_Const,
			__goidl__.TypeDefType,
			"GIOP.idl",
			"GIOP.idl.go",
			func() __goidl__.IIdlObject {
				return &GiopTargetAddress{}
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return &GiopTargetAddress{}
			},
			__reflect__.TypeOf((*GiopTargetAddress)(nil))))
}
