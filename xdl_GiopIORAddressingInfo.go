// Code generated by me. DO NOT EDIT.

package goIdlGiop

import __goIdlIop__ "github.com/bhbosman/goIdlIop"
import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"

// Struct declaration: "GIOP::IORAddressingInfo", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type GiopIORAddressingInfo struct {
	__goidl__.IdlObject
	SelectedProfileIndex uint32 `json:"SelectedProfileIndex"`
	Ior __goIdlIop__.IopIor `json:"Ior"`
}

//noinspection GoSnakeCaseUsage
const GiopIORAddressingInfoId_Const = "IDL:omg.org/GIOP/IORAddressingInfo:1.0"

func (self *GiopIORAddressingInfo) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *GiopIORAddressingInfo) GoString() string {
	return self.String()
}

func (self *GiopIORAddressingInfo) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(UnsignedLongType)
	self.SelectedProfileIndex, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlStruct)
	err = self.Ior.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *GiopIORAddressingInfo) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *GiopIORAddressingInfo) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(UnsignedLongType)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.SelectedProfileIndex)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlStruct)
	err = self.Ior.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type GiopIORAddressingInfo_Helper struct {
}


//noinspection GoUnusedGlobalVariable
var GiopIORAddressingInfoHelper = GiopIORAddressingInfo_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			GiopIORAddressingInfoId_Const,
			__goidl__.StructType,
			"GIOP.idl",
			"xdl_GiopIORAddressingInfo.go",
			func() __goidl__.IIdlObject {
				return &GiopIORAddressingInfo{}
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return &GiopIORAddressingInfo{}
			},
			__reflect__.TypeOf((*GiopIORAddressingInfo)(nil))))
}
